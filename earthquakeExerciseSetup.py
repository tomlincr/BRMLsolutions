# -*- coding: utf-8 -*-
"""
Created on Mon Nov  9 12:13:11 2020

@author: chris
"""
import numpy as np

def value(x_true,y_true,x_sensor,y_sensor):
    return 1/(0.1+ (x_true-x_sensor)**2 + (y_true-y_sensor)**2)

def earthquake_exercise_setup():
    # explosion detector (using spiral coordinate system)
    # define the coordinate system:
    S=2000 # number of points on the spiral
    rate=25 # angular rate of spiral
    sd=0.2 # standard deviation of the sensor Gaussian noise
        # unused parameter
    
    x=np.zeros(S); y=np.zeros(S) # init empty arrays
    for s in range(0,S):
        theta=rate*2*np.pi*s/S
        r=s/S
        x[s]=r*np.cos(theta)
        y[s]=r*np.sin(theta)
    
    # define the locations of the detection stations on the surface
    # Also define what value on each sensor would be generated by an explostion at internal location s
    N=30 # number of stations
    x_sensor=np.zeros(N); y_sensor=np.zeros(N) # init empty arrays
    v=np.zeros((S,N)) # init empty matrix
    for sensor in range(0,N):
        theta_sensor=2*np.pi*sensor/N
        x_sensor[sensor]=np.cos(theta_sensor)
        y_sensor[sensor]=np.sin(theta_sensor)
        for s in range(0,S):
            # where does value function come from?
            v[s,sensor]=value(x[s],y[s],x_sensor[sensor],y_sensor[sensor]) # explosion value for some value function
